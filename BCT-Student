// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
contract StudentData { 
    struct Student {
        string name;
        uint256 age;
        uint256 id;
    }
    Student[] public students;
    receive() external payable {
    }
    fallback() external payable {
    }
    function addStudent(string memory _name, uint256 _age, uint256 _id) public {
        Student memory newStudent = Student({
            name: _name,
            age: _age,
            id: _id
        });
        students.push(newStudent);
    }
    function getStudent(uint256 index) public view returns (string memory, uint256, uint256) {
        require(index < students.length, "Student does not exist.");
        Student memory student = students[index];
        return (student.name, student.age, student.id);
    }
    function getStudentCount() public view returns (uint256) {
        return students.length;
    }
}
